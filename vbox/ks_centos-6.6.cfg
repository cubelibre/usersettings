install
cdrom
lang en_US.UTF-8
keyboard us
network --bootproto=dhcp
rootpw --plaintext mybox
firewall --disabled
selinux --permissive
timezone UTC
unsupported_hardware
bootloader --location=mbr
text
skipx
zerombr
clearpart --all --initlabel
autopart
auth --enableshadow --passalgo=sha512 --kickstart
firstboot --disabled
reboot
user --name=mybox --plaintext --password mybox

%packages --nobase --ignoremissing --excludedocs
# mybox needs this to copy initial files via scp
openssh-clients
sudo
kernel-headers
kernel-devel
gcc
make
perl
wget
nfs-utils
-fprintd-pam
-intltool

# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware

%post
# Force to set SELinux to a permissive mode
sed -i -e 's/\(^SELINUX=\).*$/\1permissive/' /etc/selinux/config
# update root certs
wget -O/etc/pki/tls/certs/ca-bundle.crt http://curl.haxx.se/ca/cacert.pem
# sudo
echo "%mybox ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/mybox
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

# Create mybox user
groupadd mybox
useradd mybox -g mybox -G mybox 
echo "mybox" | passwd --stdin mybox

# Install mybox keys
mkdir -p /home/mybox/.ssh

cat <<EOM >/home/mybox/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAy3t5WXJrgqfLSiG9Es9QMWKeGdNRVgt7\
ZWSLp20XdRY8P8kbCeAZ8yVQM27u9F/RpMhLwul0YeILpW7nnRz4FYiLigzvuXn6YW3M\
nm2l8fFraM8DAZzcElAI5T/k3bd3lfPlJSuvH4mHjVXaVdwwsbxeYoT964N5FLGnnKvx\
oAvBfa24r4L+Py5zqTCe5RsL7uEYyuL7MoEUkINaoTSkjehunfP6mRjGqLgAL7Cy4LFe\
eQ2PVbsWbt+pGWfnIsPNdkzk7Vr3WAr3hJT9UBA8DADlDKFF50e+PXVlxLftXFDObsF0\
YpF3+yw8sCcKTVikctC1K3Dxijf7NUuiCkTWGw== mybox insecure public key
EOM

chown -R mybox:mybox /home/mybox/.ssh
chmod -R u=rwX,go= /home/mybox/.ssh

# Import key first so that yum doesn't complain later.
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

# kernel-devel : VirtualBox Guest Additions.
yum shell -y <<EOM
install kernel-devel 
run
EOM

# Rebuild the initrd to include only what's needed.
dracut -f -H


yum clean all  # Remove yum's cache files.
rpm --rebuilddb


EMAIL=root
# Send a summary of what happened in the installation.
FILES=\`ls /var/log/boot.log /root/install-post.log \\
          /root/install.log /root/install.log.syslog\`
(echo -en "To: \${EMAIL}\\r\\n" ;
 echo -en "Subject: CentOS Installation Summary\\r\\n\\r\\n" ;
 echo -en "Full package list:\\r\\n\\r\\n" ;
 rpm -qa | sort ;
 for f in \${FILES}; do
   echo -en "\\r\\n\\r\\n\$f:\\r\\n\\r\\n" ;
   sed 's/^/    /' \$f && rm -f \$f ;
 done ) | sendmail \${EMAIL}

sleep 10 # Give postfix a bit of time to send the email.
service postfix stop # Kill postfix so we can clear logs.

rm -f /var/log/dmesg.old /var/log/anaconda.ifcfg.log \\
      /var/log/anaconda.log /var/log/anaconda.program.log \\
      /var/log/anaconda.storage.log /var/log/anaconda.syslog \\
      /var/log/anaconda.yum.log /root/anaconda-ks.cfg \\
      /var/log/vboxadd-install.log /var/log/vbox-install-x11.log \\
      /var/log/VBoxGuestAdditions.log /var/log/vboxadd-install-x11.log
echo -n | tee /var/log/dmesg /var/log/maillog /var/log/lastlog \\
              /var/log/secure /var/log/yum.log >/var/log/cron

chkconfig --level 2345 auditd on
chkconfig --level 2345 crond on
chkconfig --level  345 netfs on
chkconfig --level  345 nfslock on
chkconfig --level 2345 rpcbind on
chkconfig --level  345 rpcgssd on
chkconfig --level  345 rpcidmapd on
chkconfig --level 2345 sshd on

rm -rf /tmp/* /tmp/.[^.]+
dd if=/dev/zero of=/tmp/clean bs=1M || rm -f /tmp/clean


swapuuid=\`blkid -o value -l -s UUID -t TYPE=swap\`
swappart=\`readlink -f /dev/disk/by-uuid/\$swapuuid\`

swapoff \$swappart
dd if=/dev/zero of=\$swappart bs=1M
mkswap -U \$swapuuid \$swappart


cat <<EOF >/etc/rc.local && poweroff
#!/bin/sh

touch /var/lock/subsys/local
EOF

EOM
